AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31
- AWS::CodeStar

Parameters:
  ProjectId:
    Type: String
    Description: AWS CodeStar projectID used to associate new resources to team members

Resources:
  GetHelloWorld:
    Type: AWS::Serverless::Function
    Properties:
      Handler: main
      Runtime: go1.x
      Description: Creates thumbnails of uploaded images
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /
            Method: get

  PostHi:
    Type: AWS::Serverless::Function
    Properties:
      Handler: hi
      Runtime: go1.x
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /
            Method: post

  GetHello:
    Type: AWS::Serverless::Function
    Properties:
      Handler: hello
      Runtime: go1.x
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /hello
            Method: get

  InsertData:
    Type: AWS::Serverless::Function
    Properties:
      Handler: insertData
      Runtime: go1.x
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Environment:
        Variables:
          TABLE_NAME: india-gate-event
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /insert
            Method: post

  InsertDataCloudWatch:
    Type: AWS::Serverless::Function
    Properties:
      Handler: insertDataCloudWatch
      Runtime: go1.x
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Environment:
        Variables:
          TABLE_NAME: india-gate-event
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /insertRate
            Method: post

  DynamoDBTable:
       Type: AWS::DynamoDB::Table
       Properties:
         TableName: india-gate-event
         AttributeDefinitions:
           - AttributeName: eventID
             AttributeType: S
         KeySchema:
           - AttributeName: eventID
             KeyType: HASH
         ProvisionedThroughput:
           ReadCapacityUnits: 5
           WriteCapacityUnits: 5

  ScheduledRule:
    Type: "AWS::Events::Rule"
    Properties:
      Name: "Scheduler"
      Description: "ScheduledRule"
      ScheduleExpression: "rate(1 minutes)"
      State: "ENABLED"
      Targets:
        -
          Arn:
            Fn::GetAtt:
              - "InsertDataCloudWatch"
              - "Arn"
          Id: "InsertDataCloudWatch"

  PermissionForEventsToInvokeLambda:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName:
        Ref: "InsertDataCloudWatch"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn:
        Fn::GetAtt:
          - "ScheduledRule"
          - "Arn"
#  APIGateway:
#    Type: AWS::Serverless::Api
#    Properties:
#      Name: india-gate-schedular
#      StageName: Stage
#      DefinitionUri: s3://aws-codestar-us-east-1-709325198486-india-gate-sche-app/stage-swagger.json